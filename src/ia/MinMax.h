// Generated by dia2code
#ifndef IA__MINMAX__H
#define IA__MINMAX__H

#include <vector>
#include <state/Element.h>

namespace engine {
  class Move_unit;
};
namespace ia {
  class Node;
};
namespace state {
  class State;
}

#include "engine/Move_unit.h"
#include "Node.h"
#include "state/State.h"

namespace ia {

  /// class MinMax - 
  class MinMax {
    // Attributes
  public:
    engine::Move_unit action;
    std::vector<ia::Node> tree;
    state::State state_tmp;
    // Operations
  public:
    ~MinMax ();
    void create_tree (const state::State& state, int gang, int depth);
    MinMax ();
    void recursive (int depth, state::State& state, int depart, std::vector<engine::Move_unit> record, int ordre);
    void score (ia::Node& node, const state::State& state, int gang);
    int solve (const state::State& state, int gang, std::vector<ia::Node> tree);
  };

};

#endif
